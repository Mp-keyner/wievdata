import Head from 'next/head';
import styles from '@/styles/Home.module.css';
import axios from 'axios';
import { useEffect, useState, useRef } from 'react';
import * as d3 from 'd3';

export default function Home() {
  const [data, setData] = useState([]);

  const svgRef = useRef();

  useEffect(() => {
    const getData = async () => {
      try {
        const res = await axios.get('https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/GDP-data.json');
        setData(res.data.data);
      } catch (error) {
        console.error('Error fetching data:', error);
      }
    };

    getData();
  }, []);

  useEffect(() => {
    if (data.length > 0) {
      drawChart();
    }
  }, [data]);

  const drawChart = () => {
    const svg = d3.select(svgRef.current);
    const margin = { top: 20, right: 20, bottom: 30, left: 40 };
    const width = 600 - margin.left - margin.right;
    const height = 400 - margin.top - margin.bottom;

    // Obtener el valor mÃ¡ximo de los datos para la escala Y
    const maxDataValue = d3.max(data, d => d[1]);

    // Escala X
    const x = d3
      .scaleBand()
      .domain(data.map(d => d[0]))
      .range([margin.left, width + margin.left])
      .padding(0.1);

    // Escala Y
    const y = d3
      .scaleLinear()
      .domain([0, maxDataValue])
      .range([height + margin.top, margin.top]);

    // Eje X
    svg
      .append('g')
      .attr('transform', `translate(0, ${height + margin.top})`)
      .call(d3.axisBottom(x));

    // Eje Y
    svg
      .append('g')
      .attr('transform', `translate(${margin.left}, 0)`)
      .call(d3.axisLeft(y));

    // Barras
    svg
      .selectAll('rect')
      .data(data)
      .enter()
      .append('rect')
      .attr('x', d => x(d[0]))
      .attr('y', d => y(d[1]))
      .attr('width', x.bandwidth())
      .attr('height', d => height + margin.top - y(d[1]))
      .attr('fill', '#3498db');
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <svg ref={svgRef} width="600" height="400"></svg>
      </main>
    </>
  );
}
